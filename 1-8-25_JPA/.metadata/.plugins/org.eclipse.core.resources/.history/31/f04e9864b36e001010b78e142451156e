package com.wipro.productmgmt.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;
import org.springframework.data.domain.Sort;

import com.wipro.productmgmt.entity.Product;
import com.wipro.productmgmt.service.ProductService;

@RestController
@RequestMapping("/product")
public class ProductController {
	@Autowired
	ProductService productService;
	
	@PostMapping
	void save(@RequestBody Product product)
	{
		productService.save(product);
	}
	
	@GetMapping
	List<Product> findAll()
	{
		return productService.findAll();
		
	}
	
	@GetMapping("/{id}")
	Product findById(@PathVariable int id)
	{
		return productService.findById(id);
		
	}
	
	@PutMapping 
	void update(@RequestBody Product product)
	{
		productService.save(product);
		
	}
	
	@DeleteMapping("/{id}")
	void deleteById(@PathVariable int id)
	{
		productService.deleteById(id);
		
	}
	
	@GetMapping("/make")
	List<Product> findByProductMake(@RequestParam String productMake)
	{
		return productService.findByProductMake(productMake);
		
	}
	
	@GetMapping("/makepath")
	List<Product> findByProductMakeOrderByProductNameDesc(String productMake)
	{
		return productService.findByProductMakeOrderByProductNameDesc(productMake);
		
	}
	
	@GetMapping("/makepath/{productName}/{productMake}")
	List<Product> findByProductNameAndProductMakeOrderByProductNameDesc(@PathVariable String productName,@PathVariable String productMake){
		return productService.findByProductNameAndProductMakeOrderByProductNameDesc(productName, productMake);
	}
	
	@GetMapping("/page/{pageNum}/{pageSize}/{sortOrder}")
	public Page<Product> findAllPage(@PathVariable int  pageNum,@PathVariable int  pageSize,@PathVariable int  sortOrder) {
		Pageable p=null;
	  if(sortOrder==0)
	  {
		  p=PageRequest.of(pageNum, pageSize,Sort.by("productPrice").descending());
	  }
	  else
	  {
		    p=PageRequest.of(pageNum, pageSize,Sort.by("productPrice").ascending());
	  }
		
		return productService.findAll(p);
	}

}
